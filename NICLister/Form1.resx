<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>